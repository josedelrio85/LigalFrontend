@model IEnumerable<LigalFrontend.ViewModels.ClienteVM>
@using PagedList.Mvc;
@using PagedList;
@using LigalFrontend.Helpers;

@{
    var controlador = ViewContext.RouteData.Values["controller"].ToString();
}

@Html.Hidden("campoOculto")

<div class="form-group">
    <table class="table table-inverse table-hover">
        <tr>
            @Html.CustomThFor(model => model.First().cliente.CODIGOC)
            @Html.CustomThFor(model => model.First().cliente.NOMBREC)
            @Html.CustomThFor(model => model.First().cliente.POBLACION)
            <th class="tablaTitulo" scope="col">Eliminar</th>
            <th class="tablaTitulo" scope="col">Editar</th>
        </tr>
        @foreach (var item in Model)
        {
            <tr href="@Url.Action("edit", controlador, new { id = item.cliente.ID })">
                @Html.CustomTdFor(model => item.cliente.CODIGOC)
                @Html.CustomTdFor(model => item.cliente.NOMBREC)
                @Html.CustomTdFor(model => item.cliente.POBLACION)
                <td><a id="delete@(item.cliente.ID)"><span class="glyphicon glyphicon-remove" aria-hidden="true"></span></a></td>
                <td><a href="@Url.Action("edit", controlador, new { id = item.cliente.ID })"><span class="glyphicon glyphicon-pencil" aria-hidden="true"></span></a></td>
            </tr>
        }
    </table>

    @{ Html.RenderPartial("_DialogDelete");}
</div>

<div class="totalResultados" id="hola">
    @*La paginación con filtro se ejecuta por ajax*@
    @Html.PagedListPager((IPagedList)Model, page => Url.Action("Filtro", new { page }), new PagedListRenderOptions
   {
       LiElementClasses = new List<string> { "yourClass" }
   })
</div>
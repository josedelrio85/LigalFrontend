@model IEnumerable<LigalFrontend.ViewModels.VehiculoVM>
@using PagedList.Mvc;
@using PagedList;
@using LigalFrontend.Helpers

@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    ViewBag.Title = "Vehículos";
    var controlador = ViewContext.RouteData.Values["controller"].ToString();
}

@Html.AntiForgeryToken()

@{
    Html.RenderPartial("~/Views/Shared/Buscador/_FiltroVehiculos.cshtml");
    Html.RenderPartial("~/Views/Shared/DisplayTemplates/divTitulo.cshtml");
}

<div id="indexReal">
    @Html.Hidden("campoOculto")


    <div class="form-group">
        <table class="table table-inverse table-hover">
            <tr>
                @Html.CustomThFor(model => model.First().vehiculo.MATRICULA)
                @Html.CustomThFor(model => model.First().vehiculo.MODELO)
                @Html.CustomThFor(model => model.First().vehiculo.ANHOCOMPRA)
                @Html.CustomThFor(model => model.First().vehiculo.TIPOCOMBUSTIBLE)
                <th class="tablaTitulo" scope="col">Eliminar</th>
                <th class="tablaTitulo" scope="col">Editar</th>
            </tr>
            @foreach (var item in Model)
            {
                <tr href="@Url.Action("edit", controlador, new { id = item.vehiculo.ID })">
                    @Html.CustomTdFor(model => item.vehiculo.MATRICULA)
                    @Html.CustomTdFor(model => item.vehiculo.MODELO)
                    @Html.CustomTdFor(model => item.vehiculo.ANHOCOMPRA)
                    @Html.CustomTdFor(model => item.vehiculo.TIPOCOMBUSTIBLE)
                    <td><a id="delete@(item.vehiculo.ID)"><span class="glyphicon glyphicon-remove" aria-hidden="true"></span></a></td>
                    <td><a href="@Url.Action("edit", controlador, new { id = item.vehiculo.ID })"><span class="glyphicon glyphicon-pencil" aria-hidden="true"></span></a></td>
                </tr>
            }
        </table>

        @{ Html.RenderPartial("_DialogDelete");}
    </div>

    <div class="totalResultados">
        @Html.PagedListPager((IPagedList)Model, page => Url.Action("Index", new { page }))
    </div>
</div>